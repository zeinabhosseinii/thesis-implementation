{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red128\green0\blue128;}
{\*\expandedcolortbl;;\csgenericrgb\c50196\c0\c50196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 env 
\f1\b \cf2 int
\f0\b0 \cf0  RESENDING_PERIOD = 25;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  NORMAL_SPEED = 15;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  REDUCED_SPEED = 7;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  SAFE_DISTANCE = 20;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  SEGMENT_LENGTH = 200;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  LOADING_TIME_PC = 60;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  LOADING_TIME_WL = 60;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  UNLOADING_TIME_SC = 30;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  CHARGING_TIME_C1 = 60;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  CHARGING_TIME_C2 = 60;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  LEAVING_PERIOD = 13;\
env 
\f1\b \cf2 int
\f0\b0 \cf0  NUMBER_VEHICLES = 4;\
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf2 reactiveclass
\f0\b0 \cf0  CrossController (10)\{\
	
\f1\b \cf2 knownrebecs
\f0\b0 \cf0  \{ \}\
	
\f1\b \cf2 statevars
\f0\b0 \cf0  \{ 
\f1\b \cf2 boolean
\f0\b0 \cf0  crossIsFree; \}\
	CrossController() \{ crossIsFree= 
\f1\b \cf2 true
\f0\b0 \cf0 ; \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  giveCrossPermission(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0 (crossIsFree)\{\
			crossIsFree = 
\f1\b \cf2 false
\f0\b0 \cf0 ;\
			((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getCrossPermission(vehicleId);\
		\} 
\f1\b \cf2 else
\f0\b0 \cf0  ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).crossNotAvailable(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  freeCross(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{ crossIsFree = 
\f1\b \cf2 true
\f0\b0 \cf0 ; \}\
\}\
\

\f1\b \cf2 reactiveclass
\f0\b0 \cf0  PrimaryCrusher (14) \{\
	
\f1\b \cf2 knownrebecs
\f0\b0 \cf0  \{ Segment firstSubSegPcToSc; \}\
	
\f1\b \cf2 statevars
\f0\b0 \cf0  \{ 
\f1\b \cf2 boolean
\f0\b0 \cf0  isLoading; \}\
	PrimaryCrusher() \{ isLoading= 
\f1\b \cf2 false
\f0\b0 \cf0 ; \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  givePermisionForVehicle(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0  (isLoading == 
\f1\b \cf2 false
\f0\b0 \cf0 )\{\
			isLoading = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
			((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
		\} 
\f1\b \cf2 else
\f0\b0 \cf0  ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  vehicleEntered(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		delay(LOADING_TIME_PC);\
		
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  startSendingToNext(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		firstSubSegPcToSc.givePermisionForVehicle(vehicleId,-1);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  getPermision (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		isLoading= 
\f1\b \cf2 false
\f0\b0 \cf0 ;\
		((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  segmentNotFree (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId) after(RESENDING_PERIOD);\
	\}\
\}\
\

\f1\b \cf2 reactiveclass
\f0\b0 \cf0  SecondaryCrusher (14) \{\
	
\f1\b \cf2 knownrebecs
\f0\b0 \cf0  \{ Segment firstSubSegScToPrepoint; \}\
	
\f1\b \cf2 statevars
\f0\b0 \cf0  \{ 
\f1\b \cf2 boolean
\f0\b0 \cf0  isUnloading; \}\
	SecondaryCrusher() \{ isUnloading= 
\f1\b \cf2 false
\f0\b0 \cf0 ; \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  givePermisionForVehicle(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0  (isUnloading == 
\f1\b \cf2 false
\f0\b0 \cf0 )\{\
			isUnloading = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
			((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
		\} 
\f1\b \cf2 else
\f0\b0 \cf0  ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  vehicleEntered(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		delay(UNLOADING_TIME_SC);\
		
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  startSendingToNext(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		firstSubSegScToPrepoint.givePermisionForVehicle(vehicleId,-1);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  getPermision (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		isUnloading= 
\f1\b \cf2 false
\f0\b0 \cf0 ;\
		((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  segmentNotFree (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId) after(RESENDING_PERIOD);\
	\}\
\}\
\

\f1\b \cf2 reactiveclass
\f0\b0 \cf0  PrePoint (14) \{\
	
\f1\b \cf2 knownrebecs
\f0\b0 \cf0  \{ Segment firstSubSegPreToE1; Segment firstSubSegPreToE2; \}\
	
\f1\b \cf2 statevars
\f0\b0 \cf0  \{ 
\f1\b \cf2 boolean
\f0\b0 \cf0  isBusy; 
\f1\b \cf2 boolean
\f0\b0 \cf0  toE1; 
\f1\b \cf2 int
\f0\b0 \cf0  count; \}\
	PrePoint() \{ isBusy= 
\f1\b \cf2 false
\f0\b0 \cf0 ; toE1 = 
\f1\b \cf2 true
\f0\b0 \cf0 ; count=0; \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  givePermisionForVehicle(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0  (isBusy == 
\f1\b \cf2 false
\f0\b0 \cf0 )\{\
			isBusy = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
			((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
		\} 
\f1\b \cf2 else
\f0\b0 \cf0  ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  vehicleEntered(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{ 
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId); \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  startSendingToNext(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0 (toE1) firstSubSegPreToE1.givePermisionForVehicle(vehicleId,-1);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  getPermision (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		isBusy= 
\f1\b \cf2 false
\f0\b0 \cf0 ;\
		((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  segmentNotFree (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0 (toE1)\{\
			toE1 = 
\f1\b \cf2 false
\f0\b0 \cf0 ;\
			firstSubSegPreToE2.givePermisionForVehicle(vehicleId, -1);\
		\} 
\f1\b \cf2 else
\f0\b0 \cf0  \{\
			toE1 = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
			
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId) after(RESENDING_PERIOD);\
		\}\
	\}\
\}\
\

\f1\b \cf2 reactiveclass
\f0\b0 \cf0  DecisionStation (14) \{\
	
\f1\b \cf2 knownrebecs
\f0\b0 \cf0  \{ Segment firstSubSegDsToPc; \}\
	
\f1\b \cf2 statevars
\f0\b0 \cf0  \{\
		
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle1Reached; 
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle2Reached; 
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle3Reached; 
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle4Reached;\
		
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle5Reached; 
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle6Reached; 
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle7Reached; 
\f1\b \cf2 boolean
\f0\b0 \cf0  vehicle8Reached;\
	\}\
	DecisionStation() \{ 
\f1\b \cf2 self
\f0\b0 \cf0 .leaveParkingSlots(); \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  leaveParkingSlots()\{\
		startSendingToNext(1) after(1);\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES >= 2) startSendingToNext(2) after(4);\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES >= 3) startSendingToNext(3) after(6);\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES >= 4) startSendingToNext(4) after(9);\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES >= 5) startSendingToNext(5) after(12);\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES >= 6) startSendingToNext(6) after(15);\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES >= 7) startSendingToNext(7) after(19);\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES >= 8) startSendingToNext(8) after(26);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  getPermision(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{ ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId); \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  segmentNotFree(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId, 
\f1\b \cf2 int
\f0\b0 \cf0  segmentDes)\{ startSendingToNext(vehicleId) after (RESENDING_PERIOD); \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  startSendingToNext(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{ firstSubSegDsToPc.givePermisionForVehicle(vehicleId,1); \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  givePermisionForVehicle(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{ ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId); \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  vehicleEntered(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 1) vehicle1Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 2) vehicle2Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 3) vehicle3Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 4) vehicle4Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 5) vehicle5Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 6) vehicle6Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 7) vehicle7Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (vehicleId == 8) vehicle8Reached = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
\
		
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 1)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 2)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached && vehicle2Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 3)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached && vehicle2Reached && vehicle3Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 4)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached && vehicle2Reached && vehicle3Reached && vehicle4Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 5)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached && vehicle2Reached && vehicle3Reached && vehicle4Reached && vehicle5Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 6)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached && vehicle2Reached && vehicle3Reached && vehicle4Reached && vehicle5Reached && vehicle6Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 7)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached && vehicle2Reached && vehicle3Reached && vehicle4Reached && vehicle5Reached && vehicle6Reached && vehicle7Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (NUMBER_VEHICLES == 8)\{ 
\f1\b \cf2 if
\f0\b0 \cf0 (vehicle1Reached && vehicle2Reached && vehicle3Reached && vehicle4Reached && vehicle5Reached && vehicle6Reached && vehicle7Reached && vehicle8Reached) assertion(
\f1\b \cf2 false
\f0\b0 \cf0 ); \}\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  loop ()\{ 
\f1\b \cf2 self
\f0\b0 \cf0 .loop() after(5000); \}\
\}\
\

\f1\b \cf2 reactiveclass
\f0\b0 \cf0  WheelLoader (14) \{\
	
\f1\b \cf2 knownrebecs
\f0\b0 \cf0  \{ Segment firstSubSegWlToSc; \}\
	
\f1\b \cf2 statevars
\f0\b0 \cf0  \{ 
\f1\b \cf2 boolean
\f0\b0 \cf0  isLoading; \}\
	WheelLoader() \{ isLoading = 
\f1\b \cf2 false
\f0\b0 \cf0 ; \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  givePermisionForVehicle(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0  (isLoading == 
\f1\b \cf2 false
\f0\b0 \cf0 )\{\
			isLoading = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
			((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
		\} 
\f1\b \cf2 else
\f0\b0 \cf0  ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  vehicleEntered(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		delay(LOADING_TIME_WL);\
		
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  startSendingToNext(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		firstSubSegWlToSc.givePermisionForVehicle(vehicleId,-1);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  getPermision (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		isLoading= 
\f1\b \cf2 false
\f0\b0 \cf0 ;\
		((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  segmentNotFree (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId) after(RESENDING_PERIOD);\
	\}\
\}\
\

\f1\b \cf2 reactiveclass
\f0\b0 \cf0  Segment(14) \{\
	
\f1\b \cf2 knownrebecs
\f0\b0 \cf0  \{ \}\
	
\f1\b \cf2 statevars
\f0\b0 \cf0  \{\
		
\f1\b \cf2 boolean
\f0\b0 \cf0  isFree; 
\f1\b \cf2 boolean
\f0\b0 \cf0  stoppedVehicle; 
\f1\b \cf2 int
\f0\b0 \cf0  vehicleSpeed; 
\f1\b \cf2 int
\f0\b0 \cf0  segmentLength;\
		Segment nextSegment; DecisionStation decisionS; PrimaryCrusher primaryC;\
		SecondaryCrusher secondaryC; WheelLoader wheelL; PrePoint prePoint;\
		CrossController crossCtrl; Segment segRequestingCross;\
	\}\
	Segment(Segment nextS, WheelLoader wl, PrimaryCrusher pc, SecondaryCrusher sc, DecisionStation ds, PrePoint preCs, CrossController ctrl, 
\f1\b \cf2 int
\f0\b0 \cf0  speed, 
\f1\b \cf2 int
\f0\b0 \cf0  segLength) \{\
		nextSegment = nextS; decisionS = ds; primaryC = pc; secondaryC = sc;\
		wheelL = wl; prePoint = preCs; crossCtrl = ctrl; segRequestingCross = null;\
		segmentLength = segLength; vehicleSpeed = speed; isFree = 
\f1\b \cf2 true
\f0\b0 \cf0 ; stoppedVehicle =
\f1\b \cf2 false
\f0\b0 \cf0 ;\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  givePermisionForVehicle(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId, 
\f1\b \cf2 int
\f0\b0 \cf0  segmentDes)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0  (isFree) \{\
			isFree=
\f1\b \cf2 false
\f0\b0 \cf0 ;\
			
\f1\b \cf2 if
\f0\b0 \cf0 (crossCtrl == null)\{\
				
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof Segment) ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
				
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof DecisionStation) ((DecisionStation)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
				
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof PrimaryCrusher) ((PrimaryCrusher)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
				
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof WheelLoader) ((WheelLoader)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
				
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof SecondaryCrusher) ((SecondaryCrusher)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
				
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof PrePoint) ((PrePoint)
\f1\b \cf2 sender
\f0\b0 \cf0 ).getPermision(vehicleId);\
			\} 
\f1\b \cf2 else
\f0\b0 \cf0  \{\
				segRequestingCross = ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 );\
				crossCtrl.giveCrossPermission(vehicleId);\
			\}\
		\} 
\f1\b \cf2 else
\f0\b0 \cf0 \{\
			
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof Segment) ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
			
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof DecisionStation) ((DecisionStation)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId, segmentDes);\
			
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof PrimaryCrusher) ((PrimaryCrusher)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
			
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof WheelLoader) ((WheelLoader)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
			
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof SecondaryCrusher) ((SecondaryCrusher)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
			
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof PrePoint) ((PrePoint)
\f1\b \cf2 sender
\f0\b0 \cf0 ).segmentNotFree(vehicleId);\
		\}\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  getCrossPermission(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{ ((Segment)segRequestingCross).getPermision(vehicleId); \}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  vehicleEntered (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		delay((segmentLength-SAFE_DISTANCE)/vehicleSpeed);\
		
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  crossNotAvailable(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		isFree = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		((Segment)segRequestingCross).segmentNotFree(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  startSendingToNext(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		
\f1\b \cf2 if
\f0\b0 \cf0 (nextSegment != null) nextSegment.givePermisionForVehicle(vehicleId,-1);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (primaryC != null) primaryC.givePermisionForVehicle(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (wheelL != null) wheelL.givePermisionForVehicle(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (secondaryC != null) secondaryC.givePermisionForVehicle(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (decisionS != null) decisionS.givePermisionForVehicle(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (prePoint != null) prePoint.givePermisionForVehicle(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  getPermision (
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{\
		stoppedVehicle = 
\f1\b \cf2 false
\f0\b0 \cf0 ;\
		delay(SAFE_DISTANCE/vehicleSpeed);\
		isFree = 
\f1\b \cf2 true
\f0\b0 \cf0 ;\
		
\f1\b \cf2 if
\f0\b0 \cf0 (crossCtrl != null)\{ segRequestingCross = null; crossCtrl.freeCross(vehicleId); \}\
		
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof Segment) ((Segment)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof DecisionStation) ((DecisionStation)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof PrimaryCrusher) ((PrimaryCrusher)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof WheelLoader) ((WheelLoader)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof SecondaryCrusher) ((SecondaryCrusher)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
		
\f1\b \cf2 else
\f0\b0 \cf0  
\f1\b \cf2 if
\f0\b0 \cf0 (
\f1\b \cf2 sender
\f0\b0 \cf0  instanceof PrePoint) ((PrePoint)
\f1\b \cf2 sender
\f0\b0 \cf0 ).vehicleEntered(vehicleId);\
	\}\
	
\f1\b \cf2 msgsrv
\f0\b0 \cf0  segmentNotFree(
\f1\b \cf2 int
\f0\b0 \cf0  vehicleId)\{ stoppedVehicle = 
\f1\b \cf2 true
\f0\b0 \cf0 ; 
\f1\b \cf2 self
\f0\b0 \cf0 .startSendingToNext(vehicleId) after(RESENDING_PERIOD); \}\
\}\
\

\f1\b \cf2 main
\f0\b0 \cf0 \{\
	PrimaryCrusher pc(subSeg1E2ToS2):();\
	SecondaryCrusher sc(subSeg1E3ToE4):();\
	WheelLoader wl(subSeg1E1ToS2):();\
	DecisionStation ds(subSeg1S4ToPre):();\
	CrossController controller():();\
	PrePoint prePoint(subSeg1S5ToE1,subSeg1S6ToE2):();\
\
	Segment subSeg1E2ToS2():(subSeg2E2ToS2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg2E2ToS2():(subSeg3E2ToS2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg3E2ToS2():(subSeg4E2ToS2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg4E2ToS2():(subSeg5E2ToS2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg5E2ToS2():(subSeg1S2ToE3,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
\
	Segment subSeg1E1ToS2():(subSeg2E1ToS2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg2E1ToS2():(subSeg3E1ToS2,null,null,null,null,null,controller,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg3E1ToS2():(subSeg4E1ToS2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg4E1ToS2():(subSeg5E1ToS2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg5E1ToS2():(subSeg1S2ToE3,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
\
	Segment subSeg1S2ToE3():(subSeg2S2ToE3,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg2S2ToE3():(subSeg3S2ToE3,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg3S2ToE3():(subSeg4S2ToE3,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg4S2ToE3():(subSeg5S2ToE3,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg5S2ToE3():(null,null,null,sc,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
\
	Segment subSeg1E3ToE4():(subSeg2E3ToE4,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg2E3ToE4():(subSeg3E3ToE4,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg3E3ToE4():(subSeg4E3ToE4,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg4E3ToE4():(subSeg5E3ToE4,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg5E3ToE4():(null,null,null,null,ds,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
\
	Segment subSeg1S6ToE2():(subSeg2S6ToE2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg2S6ToE2():(subSeg3S6ToE2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg3S6ToE2():(subSeg4S6ToE2,null,null,null,null,null,controller,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg4S6ToE2():(subSeg5S6ToE2,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg5S6ToE2():(null,null,pc,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
\
	Segment subSeg1S5ToE1():(subSeg2S5ToE1,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg2S5ToE1():(subSeg3S5ToE1,null,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
	Segment subSeg3S5ToE1():(null,wl,null,null,null,null,null,REDUCED_SPEED,SEGMENT_LENGTH);\
\
	Segment subSeg1S4ToPre():(subSeg2S4ToPre,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg2S4ToPre():(subSeg3S4ToPre,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg3S4ToPre():(subSeg4S4ToPre,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg4S4ToPre():(subSeg5S4ToPre,null,null,null,null,null,null,NORMAL_SPEED,SEGMENT_LENGTH);\
	Segment subSeg5S4ToPre():(null,null,null,null,null,prePoint,null,NORMAL_SPEED,SEGMENT_LENGTH);\
\}\
}